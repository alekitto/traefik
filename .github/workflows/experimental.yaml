name: Build experimental image on branch

on:
  push:
    branches:
      - master
      - v*

env:
  GO_VERSION: '1.24'
  CGO_ENABLED: 0
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-webui:
    if: github.repository == 'traefik/traefik'
    uses: ./.github/workflows/template-webui.yaml

  experimental:
    if: github.repository == 'alekitto/traefik'
    name: Build experimental image on branch
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        env:
          ImageOS: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.goarm }}
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Build
        run: make generate binary

      - name: Branch name
        run: echo ${GITHUB_REF##*/}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Artifact webui
        uses: actions/download-artifact@v4
        with:
          name: webui.tar.gz

      - name: Untar webui
        run: |
          tar xvf webui.tar.gz
          rm webui.tar.gz

      - name: Build executables
        run: |
          make binary-linux-amd64 binary-linux-arm64 binary-linux-armv7 binary-linux-ppc64le binary-linux-s390x

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=experimental-,onlatest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
